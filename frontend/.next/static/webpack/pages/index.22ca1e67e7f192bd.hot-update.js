"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./utils/merkleTree.js":
/*!*****************************!*\
  !*** ./utils/merkleTree.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createMerkleProof: function() { return /* binding */ createMerkleProof; }\n/* harmony export */ });\n/* harmony import */ var circomlibjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! circomlibjs */ \"./node_modules/circomlibjs/main.js\");\n\nclass MerkleTree {\n    async initialize() {\n        // Initialize Poseidon\n        this.poseidon = await (0,circomlibjs__WEBPACK_IMPORTED_MODULE_0__.buildPoseidon)();\n        // Calculate zero values for each level\n        this.zeros = new Array(this.levels + 1);\n        this.zeros[0] = BigInt(0);\n        for(let i = 1; i <= this.levels; i++){\n            this.zeros[i] = this.hashPair(this.zeros[i - 1], this.zeros[i - 1]);\n        }\n        // Initialize the tree with zero values\n        for(let i = 0; i < this.capacity * 2; i++){\n            if (i >= this.capacity) {\n                this.nodes[i] = this.zeros[0];\n            } else {\n                const level = Math.floor(Math.log2(i + 1));\n                this.nodes[i] = this.zeros[level];\n            }\n        }\n    }\n    hashPair(left, right) {\n        const hash = this.poseidon([\n            left,\n            right\n        ]);\n        return this.poseidon.F.toString(hash);\n    }\n    insert(leaf) {\n        let index = this.nextIndex();\n        if (index === -1) throw new Error(\"Tree is full\");\n        // Convert leaf to BigInt if it's not already\n        leaf = BigInt(leaf);\n        // Insert the leaf\n        let current = index + this.capacity;\n        this.nodes[current] = leaf;\n        // Calculate path to root\n        for(let i = 0; i < this.levels; i++){\n            current = Math.floor((current - 1) / 2);\n            const left = this.nodes[current * 2 + 1];\n            const right = this.nodes[current * 2 + 2];\n            this.nodes[current] = BigInt(this.hashPair(left, right));\n        }\n        return index;\n    }\n    generateProof(index) {\n        if (index < 0 || index >= this.capacity) {\n            throw new Error(\"Index out of bounds\");\n        }\n        const pathElements = [];\n        const pathIndices = [];\n        // Calculate path\n        let current = index + this.capacity;\n        for(let i = 0; i < this.levels; i++){\n            const isRight = current % 2 === 1;\n            const sibling = isRight ? current - 1 : current + 1;\n            // Use zero value if sibling is out of bounds\n            const siblingValue = sibling < this.nodes.length ? this.nodes[sibling] : this.zeros[Math.floor(Math.log2(sibling - this.capacity + 1))];\n            pathElements.push(siblingValue.toString());\n            pathIndices.push(isRight ? 0 : 1);\n            current = Math.floor((current - 1) / 2);\n        }\n        return {\n            pathElements,\n            pathIndices,\n            root: this.getRoot().toString()\n        };\n    }\n    getRoot() {\n        return this.nodes[1];\n    }\n    nextIndex() {\n        for(let i = 0; i < this.capacity; i++){\n            const node = this.nodes[i + this.capacity];\n            if (node.toString() === this.zeros[0].toString()) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    constructor(levels = 20){\n        this.levels = levels;\n        this.capacity = 2 ** levels;\n        this.nodes = new Array(this.capacity * 2).fill(BigInt(0));\n        this.zeros = null;\n        this.poseidon = null;\n    }\n}\nconst createMerkleProof = async (commitment, allCommitments)=>{\n    const tree = new MerkleTree();\n    await tree.initialize();\n    // Insert all commitments\n    for (const comm of allCommitments){\n        tree.insert(comm);\n    }\n    // Find index of our commitment\n    const index = allCommitments.indexOf(commitment);\n    if (index === -1) {\n        throw new Error(\"Commitment not found in tree\");\n    }\n    // Generate proof\n    return tree.generateProof(index);\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils/merkleTree.js\n"));

/***/ })

});