"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./utils/zkProof.js":
/*!**************************!*\
  !*** ./utils/zkProof.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateProof: function() { return /* binding */ generateProof; }\n/* harmony export */ });\n/* harmony import */ var snarkjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! snarkjs */ \"./node_modules/snarkjs/build/browser.esm.js\");\n/* harmony import */ var _merkleTree__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./merkleTree */ \"./utils/merkleTree.js\");\n\n\nconst addressToNumber = (address)=>{\n    // Remove the 'juno' prefix\n    const addressWithoutPrefix = address.replace(\"juno\", \"\");\n    // Convert the remaining characters to a number\n    let result = \"\";\n    for(let i = 0; i < addressWithoutPrefix.length; i++){\n        result += addressWithoutPrefix.charCodeAt(i).toString(16);\n    }\n    return BigInt(\"0x\" + result);\n};\n// Helper function to pad hex strings to even length\nconst padHex = (hexStr)=>{\n    // Remove 0x prefix if present\n    let hex = hexStr.startsWith(\"0x\") ? hexStr.slice(2) : hexStr;\n    // Add leading zero if odd length\n    if (hex.length % 2 !== 0) {\n        hex = \"0\" + hex;\n    }\n    return \"0x\" + hex;\n};\nconst generateProof = async (secret, commitment, allCommitments, recipient)=>{\n    try {\n        console.log(\"Generating proof with inputs:\", {\n            secret,\n            commitment,\n            recipient\n        });\n        if (!secret) throw new Error(\"Secret is undefined\");\n        if (!commitment) throw new Error(\"Commitment is undefined\");\n        if (!recipient) throw new Error(\"Recipient is undefined\");\n        // Convert secret to BigInt\n        const secretBigInt = BigInt(\"0x\" + secret);\n        // Generate Merkle proof\n        console.log(\"Generating Merkle proof...\");\n        const merkleProof = await (0,_merkleTree__WEBPACK_IMPORTED_MODULE_1__.createMerkleProof)(commitment, allCommitments);\n        console.log(\"Merkle proof:\", merkleProof);\n        // Input for the circuit - only include what the circuit expects\n        const input = {\n            leaf: secretBigInt.toString(),\n            pathElements: merkleProof.pathElements,\n            pathIndices: merkleProof.pathIndices\n        };\n        console.log(\"Circuit inputs:\", input);\n        // Get the base URL for the current page\n        const baseUrl = window.location.origin;\n        const wasmPath = \"\".concat(baseUrl, \"/merkleproof_js/merkleproof.wasm\");\n        const zkeyPath = \"\".concat(baseUrl, \"/merkleproof_final.zkey\");\n        console.log(\"Loading circuit files from:\", {\n            wasmPath,\n            zkeyPath\n        });\n        // Generate the proof using the wasm and zkey URLs\n        const { proof, publicSignals } = await snarkjs__WEBPACK_IMPORTED_MODULE_0__.groth16.fullProve(input, wasmPath, zkeyPath);\n        console.log(\"Generated proof:\", proof);\n        console.log(\"Public signals:\", publicSignals);\n        // Convert the proof to hex strings with proper padding\n        const proofForContract = [\n            // Convert pi_a points to hex strings\n            proof.pi_a[0].toString(16),\n            proof.pi_a[1].toString(16),\n            // Convert pi_b points to hex strings (note the reversed order for each pair)\n            proof.pi_b[0][1].toString(16),\n            proof.pi_b[0][0].toString(16),\n            proof.pi_b[1][1].toString(16),\n            proof.pi_b[1][0].toString(16),\n            // Convert pi_c points to hex strings\n            proof.pi_c[0].toString(16),\n            proof.pi_c[1].toString(16)\n        ].map((x)=>{\n            if (x.startsWith(\"-\")) {\n                return \"-\" + padHex(x.slice(1));\n            }\n            return padHex(x);\n        });\n        console.log(\"Proof for contract:\", proofForContract);\n        return proofForContract;\n    } catch (error) {\n        console.error(\"Error generating proof:\", error);\n        throw error;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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MkIsTUFBTU0sSUFBSSxDQUFDLEVBQUUsQ0FBQ2pDLFFBQVEsQ0FBQztTQUN4QixDQUFDa0MsR0FBRyxDQUFDQyxDQUFBQTtZQUNKLElBQUlBLEVBQUU5QixVQUFVLENBQUMsTUFBTTtnQkFDckIsT0FBTyxNQUFNSCxPQUFPaUMsRUFBRTdCLEtBQUssQ0FBQztZQUM5QjtZQUNBLE9BQU9KLE9BQU9pQztRQUNoQjtRQUVBdkIsUUFBUUMsR0FBRyxDQUFDLHVCQUF1QmlCO1FBQ25DLE9BQU9BO0lBQ1QsRUFBRSxPQUFPTSxPQUFPO1FBQ2R4QixRQUFRd0IsS0FBSyxDQUFDLDJCQUEyQkE7UUFDekMsTUFBTUE7SUFDUjtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vdXRpbHMvemtQcm9vZi5qcz80NmQzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdyb3RoMTYgfSBmcm9tICdzbmFya2pzJztcbmltcG9ydCB7IGNyZWF0ZU1lcmtsZVByb29mIH0gZnJvbSAnLi9tZXJrbGVUcmVlJztcblxuY29uc3QgYWRkcmVzc1RvTnVtYmVyID0gKGFkZHJlc3MpID0+IHtcbiAgLy8gUmVtb3ZlIHRoZSAnanVubycgcHJlZml4XG4gIGNvbnN0IGFkZHJlc3NXaXRob3V0UHJlZml4ID0gYWRkcmVzcy5yZXBsYWNlKCdqdW5vJywgJycpO1xuICBcbiAgLy8gQ29udmVydCB0aGUgcmVtYWluaW5nIGNoYXJhY3RlcnMgdG8gYSBudW1iZXJcbiAgbGV0IHJlc3VsdCA9ICcnO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGFkZHJlc3NXaXRob3V0UHJlZml4Lmxlbmd0aDsgaSsrKSB7XG4gICAgcmVzdWx0ICs9IGFkZHJlc3NXaXRob3V0UHJlZml4LmNoYXJDb2RlQXQoaSkudG9TdHJpbmcoMTYpO1xuICB9XG4gIHJldHVybiBCaWdJbnQoJzB4JyArIHJlc3VsdCk7XG59O1xuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gcGFkIGhleCBzdHJpbmdzIHRvIGV2ZW4gbGVuZ3RoXG5jb25zdCBwYWRIZXggPSAoaGV4U3RyKSA9PiB7XG4gIC8vIFJlbW92ZSAweCBwcmVmaXggaWYgcHJlc2VudFxuICBsZXQgaGV4ID0gaGV4U3RyLnN0YXJ0c1dpdGgoJzB4JykgPyBoZXhTdHIuc2xpY2UoMikgOiBoZXhTdHI7XG4gIC8vIEFkZCBsZWFkaW5nIHplcm8gaWYgb2RkIGxlbmd0aFxuICBpZiAoaGV4Lmxlbmd0aCAlIDIgIT09IDApIHtcbiAgICBoZXggPSAnMCcgKyBoZXg7XG4gIH1cbiAgcmV0dXJuICcweCcgKyBoZXg7XG59O1xuXG5leHBvcnQgY29uc3QgZ2VuZXJhdGVQcm9vZiA9IGFzeW5jIChzZWNyZXQsIGNvbW1pdG1lbnQsIGFsbENvbW1pdG1lbnRzLCByZWNpcGllbnQpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZygnR2VuZXJhdGluZyBwcm9vZiB3aXRoIGlucHV0czonLCB7XG4gICAgICBzZWNyZXQsXG4gICAgICBjb21taXRtZW50LFxuICAgICAgcmVjaXBpZW50XG4gICAgfSk7XG5cbiAgICBpZiAoIXNlY3JldCkgdGhyb3cgbmV3IEVycm9yKCdTZWNyZXQgaXMgdW5kZWZpbmVkJyk7XG4gICAgaWYgKCFjb21taXRtZW50KSB0aHJvdyBuZXcgRXJyb3IoJ0NvbW1pdG1lbnQgaXMgdW5kZWZpbmVkJyk7XG4gICAgaWYgKCFyZWNpcGllbnQpIHRocm93IG5ldyBFcnJvcignUmVjaXBpZW50IGlzIHVuZGVmaW5lZCcpO1xuXG4gICAgLy8gQ29udmVydCBzZWNyZXQgdG8gQmlnSW50XG4gICAgY29uc3Qgc2VjcmV0QmlnSW50ID0gQmlnSW50KCcweCcgKyBzZWNyZXQpO1xuXG4gICAgLy8gR2VuZXJhdGUgTWVya2xlIHByb29mXG4gICAgY29uc29sZS5sb2coJ0dlbmVyYXRpbmcgTWVya2xlIHByb29mLi4uJyk7XG4gICAgY29uc3QgbWVya2xlUHJvb2YgPSBhd2FpdCBjcmVhdGVNZXJrbGVQcm9vZihjb21taXRtZW50LCBhbGxDb21taXRtZW50cyk7XG4gICAgY29uc29sZS5sb2coJ01lcmtsZSBwcm9vZjonLCBtZXJrbGVQcm9vZik7XG5cbiAgICAvLyBJbnB1dCBmb3IgdGhlIGNpcmN1aXQgLSBvbmx5IGluY2x1ZGUgd2hhdCB0aGUgY2lyY3VpdCBleHBlY3RzXG4gICAgY29uc3QgaW5wdXQgPSB7XG4gICAgICBsZWFmOiBzZWNyZXRCaWdJbnQudG9TdHJpbmcoKSxcbiAgICAgIHBhdGhFbGVtZW50czogbWVya2xlUHJvb2YucGF0aEVsZW1lbnRzLFxuICAgICAgcGF0aEluZGljZXM6IG1lcmtsZVByb29mLnBhdGhJbmRpY2VzXG4gICAgfTtcblxuICAgIGNvbnNvbGUubG9nKCdDaXJjdWl0IGlucHV0czonLCBpbnB1dCk7XG5cbiAgICAvLyBHZXQgdGhlIGJhc2UgVVJMIGZvciB0aGUgY3VycmVudCBwYWdlXG4gICAgY29uc3QgYmFzZVVybCA9IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW47XG4gICAgY29uc3Qgd2FzbVBhdGggPSBgJHtiYXNlVXJsfS9tZXJrbGVwcm9vZl9qcy9tZXJrbGVwcm9vZi53YXNtYDtcbiAgICBjb25zdCB6a2V5UGF0aCA9IGAke2Jhc2VVcmx9L21lcmtsZXByb29mX2ZpbmFsLnprZXlgO1xuXG4gICAgY29uc29sZS5sb2coJ0xvYWRpbmcgY2lyY3VpdCBmaWxlcyBmcm9tOicsIHsgd2FzbVBhdGgsIHprZXlQYXRoIH0pO1xuXG4gICAgLy8gR2VuZXJhdGUgdGhlIHByb29mIHVzaW5nIHRoZSB3YXNtIGFuZCB6a2V5IFVSTHNcbiAgICBjb25zdCB7IHByb29mLCBwdWJsaWNTaWduYWxzIH0gPSBhd2FpdCBncm90aDE2LmZ1bGxQcm92ZShcbiAgICAgIGlucHV0LFxuICAgICAgd2FzbVBhdGgsXG4gICAgICB6a2V5UGF0aFxuICAgICk7XG5cbiAgICBjb25zb2xlLmxvZygnR2VuZXJhdGVkIHByb29mOicsIHByb29mKTtcbiAgICBjb25zb2xlLmxvZygnUHVibGljIHNpZ25hbHM6JywgcHVibGljU2lnbmFscyk7XG5cbiAgICAvLyBDb252ZXJ0IHRoZSBwcm9vZiB0byBoZXggc3RyaW5ncyB3aXRoIHByb3BlciBwYWRkaW5nXG4gICAgY29uc3QgcHJvb2ZGb3JDb250cmFjdCA9IFtcbiAgICAgIC8vIENvbnZlcnQgcGlfYSBwb2ludHMgdG8gaGV4IHN0cmluZ3NcbiAgICAgIHByb29mLnBpX2FbMF0udG9TdHJpbmcoMTYpLFxuICAgICAgcHJvb2YucGlfYVsxXS50b1N0cmluZygxNiksXG4gICAgICAvLyBDb252ZXJ0IHBpX2IgcG9pbnRzIHRvIGhleCBzdHJpbmdzIChub3RlIHRoZSByZXZlcnNlZCBvcmRlciBmb3IgZWFjaCBwYWlyKVxuICAgICAgcHJvb2YucGlfYlswXVsxXS50b1N0cmluZygxNiksXG4gICAgICBwcm9vZi5waV9iWzBdWzBdLnRvU3RyaW5nKDE2KSxcbiAgICAgIHByb29mLnBpX2JbMV1bMV0udG9TdHJpbmcoMTYpLFxuICAgICAgcHJvb2YucGlfYlsxXVswXS50b1N0cmluZygxNiksXG4gICAgICAvLyBDb252ZXJ0IHBpX2MgcG9pbnRzIHRvIGhleCBzdHJpbmdzXG4gICAgICBwcm9vZi5waV9jWzBdLnRvU3RyaW5nKDE2KSxcbiAgICAgIHByb29mLnBpX2NbMV0udG9TdHJpbmcoMTYpXG4gICAgXS5tYXAoeCA9PiB7XG4gICAgICBpZiAoeC5zdGFydHNXaXRoKCctJykpIHtcbiAgICAgICAgcmV0dXJuICctJyArIHBhZEhleCh4LnNsaWNlKDEpKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBwYWRIZXgoeCk7XG4gICAgfSk7XG5cbiAgICBjb25zb2xlLmxvZygnUHJvb2YgZm9yIGNvbnRyYWN0OicsIHByb29mRm9yQ29udHJhY3QpO1xuICAgIHJldHVybiBwcm9vZkZvckNvbnRyYWN0O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGdlbmVyYXRpbmcgcHJvb2Y6JywgZXJyb3IpO1xuICAgIHRocm93IGVycm9yO1xuICB9XG59OyAiXSwibmFtZXMiOlsiZ3JvdGgxNiIsImNyZWF0ZU1lcmtsZVByb29mIiwiYWRkcmVzc1RvTnVtYmVyIiwiYWRkcmVzcyIsImFkZHJlc3NXaXRob3V0UHJlZml4IiwicmVwbGFjZSIsInJlc3VsdCIsImkiLCJsZW5ndGgiLCJjaGFyQ29kZUF0IiwidG9TdHJpbmciLCJCaWdJbnQiLCJwYWRIZXgiLCJoZXhTdHIiLCJoZXgiLCJzdGFydHNXaXRoIiwic2xpY2UiLCJnZW5lcmF0ZVByb29mIiwic2VjcmV0IiwiY29tbWl0bWVudCIsImFsbENvbW1pdG1lbnRzIiwicmVjaXBpZW50IiwiY29uc29sZSIsImxvZyIsIkVycm9yIiwic2VjcmV0QmlnSW50IiwibWVya2xlUHJvb2YiLCJpbnB1dCIsImxlYWYiLCJwYXRoRWxlbWVudHMiLCJwYXRoSW5kaWNlcyIsImJhc2VVcmwiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsIm9yaWdpbiIsIndhc21QYXRoIiwiemtleVBhdGgiLCJwcm9vZiIsInB1YmxpY1NpZ25hbHMiLCJmdWxsUHJvdmUiLCJwcm9vZkZvckNvbnRyYWN0IiwicGlfYSIsInBpX2IiLCJwaV9jIiwibWFwIiwieCIsImVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./utils/zkProof.js\n"));

/***/ })

});