"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./utils/zkProof.js":
/*!**************************!*\
  !*** ./utils/zkProof.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateProof: function() { return /* binding */ generateProof; }\n/* harmony export */ });\n/* harmony import */ var snarkjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! snarkjs */ \"./node_modules/snarkjs/build/browser.esm.js\");\n/* harmony import */ var _merkleTree__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./merkleTree */ \"./utils/merkleTree.js\");\n\n\nconst addressToNumber = (address)=>{\n    // Remove the 'juno' prefix\n    const addressWithoutPrefix = address.replace(\"juno\", \"\");\n    // Convert the remaining characters to a number\n    let result = \"\";\n    for(let i = 0; i < addressWithoutPrefix.length; i++){\n        result += addressWithoutPrefix.charCodeAt(i).toString(16);\n    }\n    return BigInt(\"0x\" + result);\n};\nconst generateProof = async (secret, commitment, allCommitments, recipient)=>{\n    try {\n        console.log(\"Generating proof with inputs:\", {\n            secret,\n            commitment,\n            recipient\n        });\n        if (!secret) throw new Error(\"Secret is undefined\");\n        if (!commitment) throw new Error(\"Commitment is undefined\");\n        if (!recipient) throw new Error(\"Recipient is undefined\");\n        // Convert secret to BigInt\n        const secretBigInt = BigInt(\"0x\" + secret);\n        // Generate Merkle proof\n        console.log(\"Generating Merkle proof...\");\n        const merkleProof = await (0,_merkleTree__WEBPACK_IMPORTED_MODULE_1__.createMerkleProof)(commitment, allCommitments);\n        console.log(\"Merkle proof:\", merkleProof);\n        // Input for the circuit - only include what the circuit expects\n        const input = {\n            leaf: secretBigInt.toString(),\n            pathElements: merkleProof.pathElements,\n            pathIndices: merkleProof.pathIndices\n        };\n        console.log(\"Circuit inputs:\", input);\n        // Get the base URL for the current page\n        const baseUrl = window.location.origin;\n        const wasmPath = \"\".concat(baseUrl, \"/merkleproof_js/merkleproof.wasm\");\n        const zkeyPath = \"\".concat(baseUrl, \"/merkleproof_final.zkey\");\n        console.log(\"Loading circuit files from:\", {\n            wasmPath,\n            zkeyPath\n        });\n        // Generate the proof using the wasm and zkey URLs\n        const { proof, publicSignals } = await snarkjs__WEBPACK_IMPORTED_MODULE_0__.groth16.fullProve(input, wasmPath, zkeyPath);\n        console.log(\"Generated proof:\", proof);\n        console.log(\"Public signals:\", publicSignals);\n        // Convert the proof to hex strings\n        const proofForContract = [\n            // Convert pi_a points to hex strings\n            proof.pi_a[0].toString(16),\n            proof.pi_a[1].toString(16),\n            // Convert pi_b points to hex strings (note the reversed order for each pair)\n            proof.pi_b[0][1].toString(16),\n            proof.pi_b[0][0].toString(16),\n            proof.pi_b[1][1].toString(16),\n            proof.pi_b[1][0].toString(16),\n            // Convert pi_c points to hex strings\n            proof.pi_c[0].toString(16),\n            proof.pi_c[1].toString(16)\n        ].map((x)=>x.startsWith(\"-\") ? \"-0x\" + x.slice(1) : \"0x\" + x);\n        return proofForContract;\n    } catch (error) {\n        console.error(\"Error generating proof:\", error);\n        throw error;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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O0lBQ1I7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3V0aWxzL3prUHJvb2YuanM/NDZkMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBncm90aDE2IH0gZnJvbSAnc25hcmtqcyc7XG5pbXBvcnQgeyBjcmVhdGVNZXJrbGVQcm9vZiB9IGZyb20gJy4vbWVya2xlVHJlZSc7XG5cbmNvbnN0IGFkZHJlc3NUb051bWJlciA9IChhZGRyZXNzKSA9PiB7XG4gIC8vIFJlbW92ZSB0aGUgJ2p1bm8nIHByZWZpeFxuICBjb25zdCBhZGRyZXNzV2l0aG91dFByZWZpeCA9IGFkZHJlc3MucmVwbGFjZSgnanVubycsICcnKTtcbiAgXG4gIC8vIENvbnZlcnQgdGhlIHJlbWFpbmluZyBjaGFyYWN0ZXJzIHRvIGEgbnVtYmVyXG4gIGxldCByZXN1bHQgPSAnJztcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBhZGRyZXNzV2l0aG91dFByZWZpeC5sZW5ndGg7IGkrKykge1xuICAgIHJlc3VsdCArPSBhZGRyZXNzV2l0aG91dFByZWZpeC5jaGFyQ29kZUF0KGkpLnRvU3RyaW5nKDE2KTtcbiAgfVxuICByZXR1cm4gQmlnSW50KCcweCcgKyByZXN1bHQpO1xufTtcblxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlUHJvb2YgPSBhc3luYyAoc2VjcmV0LCBjb21taXRtZW50LCBhbGxDb21taXRtZW50cywgcmVjaXBpZW50KSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc29sZS5sb2coJ0dlbmVyYXRpbmcgcHJvb2Ygd2l0aCBpbnB1dHM6Jywge1xuICAgICAgc2VjcmV0LFxuICAgICAgY29tbWl0bWVudCxcbiAgICAgIHJlY2lwaWVudFxuICAgIH0pO1xuXG4gICAgaWYgKCFzZWNyZXQpIHRocm93IG5ldyBFcnJvcignU2VjcmV0IGlzIHVuZGVmaW5lZCcpO1xuICAgIGlmICghY29tbWl0bWVudCkgdGhyb3cgbmV3IEVycm9yKCdDb21taXRtZW50IGlzIHVuZGVmaW5lZCcpO1xuICAgIGlmICghcmVjaXBpZW50KSB0aHJvdyBuZXcgRXJyb3IoJ1JlY2lwaWVudCBpcyB1bmRlZmluZWQnKTtcblxuICAgIC8vIENvbnZlcnQgc2VjcmV0IHRvIEJpZ0ludFxuICAgIGNvbnN0IHNlY3JldEJpZ0ludCA9IEJpZ0ludCgnMHgnICsgc2VjcmV0KTtcblxuICAgIC8vIEdlbmVyYXRlIE1lcmtsZSBwcm9vZlxuICAgIGNvbnNvbGUubG9nKCdHZW5lcmF0aW5nIE1lcmtsZSBwcm9vZi4uLicpO1xuICAgIGNvbnN0IG1lcmtsZVByb29mID0gYXdhaXQgY3JlYXRlTWVya2xlUHJvb2YoY29tbWl0bWVudCwgYWxsQ29tbWl0bWVudHMpO1xuICAgIGNvbnNvbGUubG9nKCdNZXJrbGUgcHJvb2Y6JywgbWVya2xlUHJvb2YpO1xuXG4gICAgLy8gSW5wdXQgZm9yIHRoZSBjaXJjdWl0IC0gb25seSBpbmNsdWRlIHdoYXQgdGhlIGNpcmN1aXQgZXhwZWN0c1xuICAgIGNvbnN0IGlucHV0ID0ge1xuICAgICAgbGVhZjogc2VjcmV0QmlnSW50LnRvU3RyaW5nKCksXG4gICAgICBwYXRoRWxlbWVudHM6IG1lcmtsZVByb29mLnBhdGhFbGVtZW50cyxcbiAgICAgIHBhdGhJbmRpY2VzOiBtZXJrbGVQcm9vZi5wYXRoSW5kaWNlc1xuICAgIH07XG5cbiAgICBjb25zb2xlLmxvZygnQ2lyY3VpdCBpbnB1dHM6JywgaW5wdXQpO1xuXG4gICAgLy8gR2V0IHRoZSBiYXNlIFVSTCBmb3IgdGhlIGN1cnJlbnQgcGFnZVxuICAgIGNvbnN0IGJhc2VVcmwgPSB3aW5kb3cubG9jYXRpb24ub3JpZ2luO1xuICAgIGNvbnN0IHdhc21QYXRoID0gYCR7YmFzZVVybH0vbWVya2xlcHJvb2ZfanMvbWVya2xlcHJvb2Yud2FzbWA7XG4gICAgY29uc3QgemtleVBhdGggPSBgJHtiYXNlVXJsfS9tZXJrbGVwcm9vZl9maW5hbC56a2V5YDtcblxuICAgIGNvbnNvbGUubG9nKCdMb2FkaW5nIGNpcmN1aXQgZmlsZXMgZnJvbTonLCB7IHdhc21QYXRoLCB6a2V5UGF0aCB9KTtcblxuICAgIC8vIEdlbmVyYXRlIHRoZSBwcm9vZiB1c2luZyB0aGUgd2FzbSBhbmQgemtleSBVUkxzXG4gICAgY29uc3QgeyBwcm9vZiwgcHVibGljU2lnbmFscyB9ID0gYXdhaXQgZ3JvdGgxNi5mdWxsUHJvdmUoXG4gICAgICBpbnB1dCxcbiAgICAgIHdhc21QYXRoLFxuICAgICAgemtleVBhdGhcbiAgICApO1xuXG4gICAgY29uc29sZS5sb2coJ0dlbmVyYXRlZCBwcm9vZjonLCBwcm9vZik7XG4gICAgY29uc29sZS5sb2coJ1B1YmxpYyBzaWduYWxzOicsIHB1YmxpY1NpZ25hbHMpO1xuXG4gICAgLy8gQ29udmVydCB0aGUgcHJvb2YgdG8gaGV4IHN0cmluZ3NcbiAgICBjb25zdCBwcm9vZkZvckNvbnRyYWN0ID0gW1xuICAgICAgLy8gQ29udmVydCBwaV9hIHBvaW50cyB0byBoZXggc3RyaW5nc1xuICAgICAgcHJvb2YucGlfYVswXS50b1N0cmluZygxNiksXG4gICAgICBwcm9vZi5waV9hWzFdLnRvU3RyaW5nKDE2KSxcbiAgICAgIC8vIENvbnZlcnQgcGlfYiBwb2ludHMgdG8gaGV4IHN0cmluZ3MgKG5vdGUgdGhlIHJldmVyc2VkIG9yZGVyIGZvciBlYWNoIHBhaXIpXG4gICAgICBwcm9vZi5waV9iWzBdWzFdLnRvU3RyaW5nKDE2KSxcbiAgICAgIHByb29mLnBpX2JbMF1bMF0udG9TdHJpbmcoMTYpLFxuICAgICAgcHJvb2YucGlfYlsxXVsxXS50b1N0cmluZygxNiksXG4gICAgICBwcm9vZi5waV9iWzFdWzBdLnRvU3RyaW5nKDE2KSxcbiAgICAgIC8vIENvbnZlcnQgcGlfYyBwb2ludHMgdG8gaGV4IHN0cmluZ3NcbiAgICAgIHByb29mLnBpX2NbMF0udG9TdHJpbmcoMTYpLFxuICAgICAgcHJvb2YucGlfY1sxXS50b1N0cmluZygxNilcbiAgICBdLm1hcCh4ID0+IHguc3RhcnRzV2l0aCgnLScpID8gJy0weCcgKyB4LnNsaWNlKDEpIDogJzB4JyArIHgpO1xuXG4gICAgcmV0dXJuIHByb29mRm9yQ29udHJhY3Q7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZ2VuZXJhdGluZyBwcm9vZjonLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07ICJdLCJuYW1lcyI6WyJncm90aDE2IiwiY3JlYXRlTWVya2xlUHJvb2YiLCJhZGRyZXNzVG9OdW1iZXIiLCJhZGRyZXNzIiwiYWRkcmVzc1dpdGhvdXRQcmVmaXgiLCJyZXBsYWNlIiwicmVzdWx0IiwiaSIsImxlbmd0aCIsImNoYXJDb2RlQXQiLCJ0b1N0cmluZyIsIkJpZ0ludCIsImdlbmVyYXRlUHJvb2YiLCJzZWNyZXQiLCJjb21taXRtZW50IiwiYWxsQ29tbWl0bWVudHMiLCJyZWNpcGllbnQiLCJjb25zb2xlIiwibG9nIiwiRXJyb3IiLCJzZWNyZXRCaWdJbnQiLCJtZXJrbGVQcm9vZiIsImlucHV0IiwibGVhZiIsInBhdGhFbGVtZW50cyIsInBhdGhJbmRpY2VzIiwiYmFzZVVybCIsIndpbmRvdyIsImxvY2F0aW9uIiwib3JpZ2luIiwid2FzbVBhdGgiLCJ6a2V5UGF0aCIsInByb29mIiwicHVibGljU2lnbmFscyIsImZ1bGxQcm92ZSIsInByb29mRm9yQ29udHJhY3QiLCJwaV9hIiwicGlfYiIsInBpX2MiLCJtYXAiLCJ4Iiwic3RhcnRzV2l0aCIsInNsaWNlIiwiZXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./utils/zkProof.js\n"));

/***/ })

});