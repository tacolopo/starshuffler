"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/WalletConnect.js":
/*!*************************************!*\
  !*** ./components/WalletConnect.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/react */ \"./node_modules/@chakra-ui/react/dist/index.mjs\");\n/* harmony import */ var _cosmjs_cosmwasm_stargate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @cosmjs/cosmwasm-stargate */ \"./node_modules/@cosmjs/cosmwasm-stargate/build/index.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../config */ \"./config/index.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\nconst WalletConnect = (param)=>{\n    let { onConnect } = param;\n    _s();\n    const [isConnecting, setIsConnecting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const toast = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.useToast)();\n    const connectKeplr = async ()=>{\n        try {\n            setIsConnecting(true);\n            // Check if Keplr is installed\n            if (!window.keplr) {\n                throw new Error(\"Please install Keplr extension\");\n            }\n            // Enable Keplr for the chain\n            await window.keplr.enable(_config__WEBPACK_IMPORTED_MODULE_3__.config.CHAIN_CONFIG.chainId);\n            // Get the offlineSigner for this chainId\n            const offlineSigner = await window.keplr.getOfflineSignerAuto(_config__WEBPACK_IMPORTED_MODULE_3__.config.CHAIN_CONFIG.chainId);\n            // Get the user's account\n            const accounts = await offlineSigner.getAccounts();\n            if (!accounts || accounts.length === 0) {\n                throw new Error(\"No accounts found\");\n            }\n            // Create signing client with the offlineSigner\n            const client = await _cosmjs_cosmwasm_stargate__WEBPACK_IMPORTED_MODULE_2__.SigningCosmWasmClient.connectWithSigner(_config__WEBPACK_IMPORTED_MODULE_3__.config.CHAIN_CONFIG.rpcEndpoint, offlineSigner, {\n                gasPrice: _config__WEBPACK_IMPORTED_MODULE_3__.config.CHAIN_CONFIG.gasPrice\n            });\n            // Verify we can get accounts from the signer\n            const signerAccounts = await offlineSigner.getAccounts();\n            if (!signerAccounts || signerAccounts.length === 0) {\n                throw new Error(\"Failed to get accounts from signer\");\n            }\n            onConnect({\n                client,\n                address: accounts[0].address,\n                signer: offlineSigner\n            });\n            toast({\n                title: \"Connected!\",\n                description: \"Connected to \".concat(accounts[0].address.slice(0, 8), \"...\").concat(accounts[0].address.slice(-8)),\n                status: \"success\",\n                duration: 5000,\n                isClosable: true\n            });\n        } catch (error) {\n            console.error(\"Connection error:\", error);\n            toast({\n                title: \"Connection Failed\",\n                description: error.message,\n                status: \"error\",\n                duration: 5000,\n                isClosable: true\n            });\n        } finally{\n            setIsConnecting(false);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Button, {\n        colorScheme: \"teal\",\n        onClick: connectKeplr,\n        isLoading: isConnecting,\n        loadingText: \"Connecting...\",\n        children: \"Connect Wallet\"\n    }, void 0, false, {\n        fileName: \"/home/latron/Desktop/julian-main/examples/frontend/components/WalletConnect.js\",\n        lineNumber: 72,\n        columnNumber: 5\n    }, undefined);\n};\n_s(WalletConnect, \"COh91nWKUU6AiAfvDS5K2BBIIM8=\", false, function() {\n    return [\n        _chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.useToast\n    ];\n});\n_c = WalletConnect;\n/* harmony default export */ __webpack_exports__[\"default\"] = (WalletConnect);\nvar _c;\n$RefreshReg$(_c, \"WalletConnect\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1dhbGxldENvbm5lY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFpQztBQUN5QjtBQUNRO0FBQy9CO0FBRW5DLE1BQU1NLGdCQUFnQjtRQUFDLEVBQUVDLFNBQVMsRUFBRTs7SUFDbEMsTUFBTSxDQUFDQyxjQUFjQyxnQkFBZ0IsR0FBR1QsK0NBQVFBLENBQUM7SUFDakQsTUFBTVUsUUFBUVAsMERBQVFBO0lBRXRCLE1BQU1RLGVBQWU7UUFDbkIsSUFBSTtZQUNGRixnQkFBZ0I7WUFFaEIsOEJBQThCO1lBQzlCLElBQUksQ0FBQ0csT0FBT0MsS0FBSyxFQUFFO2dCQUNqQixNQUFNLElBQUlDLE1BQU07WUFDbEI7WUFFQSw2QkFBNkI7WUFDN0IsTUFBTUYsT0FBT0MsS0FBSyxDQUFDRSxNQUFNLENBQUNWLDJDQUFNQSxDQUFDVyxZQUFZLENBQUNDLE9BQU87WUFFckQseUNBQXlDO1lBQ3pDLE1BQU1DLGdCQUFnQixNQUFNTixPQUFPQyxLQUFLLENBQUNNLG9CQUFvQixDQUFDZCwyQ0FBTUEsQ0FBQ1csWUFBWSxDQUFDQyxPQUFPO1lBRXpGLHlCQUF5QjtZQUN6QixNQUFNRyxXQUFXLE1BQU1GLGNBQWNHLFdBQVc7WUFDaEQsSUFBSSxDQUFDRCxZQUFZQSxTQUFTRSxNQUFNLEtBQUssR0FBRztnQkFDdEMsTUFBTSxJQUFJUixNQUFNO1lBQ2xCO1lBRUEsK0NBQStDO1lBQy9DLE1BQU1TLFNBQVMsTUFBTW5CLDRFQUFxQkEsQ0FBQ29CLGlCQUFpQixDQUMxRG5CLDJDQUFNQSxDQUFDVyxZQUFZLENBQUNTLFdBQVcsRUFDL0JQLGVBQ0E7Z0JBQUVRLFVBQVVyQiwyQ0FBTUEsQ0FBQ1csWUFBWSxDQUFDVSxRQUFRO1lBQUM7WUFHM0MsNkNBQTZDO1lBQzdDLE1BQU1DLGlCQUFpQixNQUFNVCxjQUFjRyxXQUFXO1lBQ3RELElBQUksQ0FBQ00sa0JBQWtCQSxlQUFlTCxNQUFNLEtBQUssR0FBRztnQkFDbEQsTUFBTSxJQUFJUixNQUFNO1lBQ2xCO1lBRUFQLFVBQVU7Z0JBQ1JnQjtnQkFDQUssU0FBU1IsUUFBUSxDQUFDLEVBQUUsQ0FBQ1EsT0FBTztnQkFDNUJDLFFBQVFYO1lBQ1Y7WUFFQVIsTUFBTTtnQkFDSm9CLE9BQU87Z0JBQ1BDLGFBQWEsZ0JBQXFEWCxPQUFyQ0EsUUFBUSxDQUFDLEVBQUUsQ0FBQ1EsT0FBTyxDQUFDSSxLQUFLLENBQUMsR0FBRyxJQUFHLE9BQW1DLE9BQTlCWixRQUFRLENBQUMsRUFBRSxDQUFDUSxPQUFPLENBQUNJLEtBQUssQ0FBQyxDQUFDO2dCQUM3RkMsUUFBUTtnQkFDUkMsVUFBVTtnQkFDVkMsWUFBWTtZQUNkO1FBQ0YsRUFBRSxPQUFPQyxPQUFPO1lBQ2RDLFFBQVFELEtBQUssQ0FBQyxxQkFBcUJBO1lBQ25DMUIsTUFBTTtnQkFDSm9CLE9BQU87Z0JBQ1BDLGFBQWFLLE1BQU1FLE9BQU87Z0JBQzFCTCxRQUFRO2dCQUNSQyxVQUFVO2dCQUNWQyxZQUFZO1lBQ2Q7UUFDRixTQUFVO1lBQ1IxQixnQkFBZ0I7UUFDbEI7SUFDRjtJQUVBLHFCQUNFLDhEQUFDUixvREFBTUE7UUFDTHNDLGFBQVk7UUFDWkMsU0FBUzdCO1FBQ1Q4QixXQUFXakM7UUFDWGtDLGFBQVk7a0JBQ2I7Ozs7OztBQUlMO0dBM0VNcEM7O1FBRVVILHNEQUFRQTs7O0tBRmxCRztBQTZFTiwrREFBZUEsYUFBYUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL1dhbGxldENvbm5lY3QuanM/ZDdiNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEJ1dHRvbiwgVGV4dCwgdXNlVG9hc3QgfSBmcm9tICdAY2hha3JhLXVpL3JlYWN0JztcbmltcG9ydCB7IFNpZ25pbmdDb3NtV2FzbUNsaWVudCB9IGZyb20gJ0Bjb3NtanMvY29zbXdhc20tc3RhcmdhdGUnO1xuaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnLi4vY29uZmlnJztcblxuY29uc3QgV2FsbGV0Q29ubmVjdCA9ICh7IG9uQ29ubmVjdCB9KSA9PiB7XG4gIGNvbnN0IFtpc0Nvbm5lY3RpbmcsIHNldElzQ29ubmVjdGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IHRvYXN0ID0gdXNlVG9hc3QoKTtcblxuICBjb25zdCBjb25uZWN0S2VwbHIgPSBhc3luYyAoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIHNldElzQ29ubmVjdGluZyh0cnVlKTtcbiAgICAgIFxuICAgICAgLy8gQ2hlY2sgaWYgS2VwbHIgaXMgaW5zdGFsbGVkXG4gICAgICBpZiAoIXdpbmRvdy5rZXBscikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJQbGVhc2UgaW5zdGFsbCBLZXBsciBleHRlbnNpb25cIik7XG4gICAgICB9XG5cbiAgICAgIC8vIEVuYWJsZSBLZXBsciBmb3IgdGhlIGNoYWluXG4gICAgICBhd2FpdCB3aW5kb3cua2VwbHIuZW5hYmxlKGNvbmZpZy5DSEFJTl9DT05GSUcuY2hhaW5JZCk7XG4gICAgICBcbiAgICAgIC8vIEdldCB0aGUgb2ZmbGluZVNpZ25lciBmb3IgdGhpcyBjaGFpbklkXG4gICAgICBjb25zdCBvZmZsaW5lU2lnbmVyID0gYXdhaXQgd2luZG93LmtlcGxyLmdldE9mZmxpbmVTaWduZXJBdXRvKGNvbmZpZy5DSEFJTl9DT05GSUcuY2hhaW5JZCk7XG4gICAgICBcbiAgICAgIC8vIEdldCB0aGUgdXNlcidzIGFjY291bnRcbiAgICAgIGNvbnN0IGFjY291bnRzID0gYXdhaXQgb2ZmbGluZVNpZ25lci5nZXRBY2NvdW50cygpO1xuICAgICAgaWYgKCFhY2NvdW50cyB8fCBhY2NvdW50cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gYWNjb3VudHMgZm91bmRcIik7XG4gICAgICB9XG5cbiAgICAgIC8vIENyZWF0ZSBzaWduaW5nIGNsaWVudCB3aXRoIHRoZSBvZmZsaW5lU2lnbmVyXG4gICAgICBjb25zdCBjbGllbnQgPSBhd2FpdCBTaWduaW5nQ29zbVdhc21DbGllbnQuY29ubmVjdFdpdGhTaWduZXIoXG4gICAgICAgIGNvbmZpZy5DSEFJTl9DT05GSUcucnBjRW5kcG9pbnQsXG4gICAgICAgIG9mZmxpbmVTaWduZXIsXG4gICAgICAgIHsgZ2FzUHJpY2U6IGNvbmZpZy5DSEFJTl9DT05GSUcuZ2FzUHJpY2UgfVxuICAgICAgKTtcblxuICAgICAgLy8gVmVyaWZ5IHdlIGNhbiBnZXQgYWNjb3VudHMgZnJvbSB0aGUgc2lnbmVyXG4gICAgICBjb25zdCBzaWduZXJBY2NvdW50cyA9IGF3YWl0IG9mZmxpbmVTaWduZXIuZ2V0QWNjb3VudHMoKTtcbiAgICAgIGlmICghc2lnbmVyQWNjb3VudHMgfHwgc2lnbmVyQWNjb3VudHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBnZXQgYWNjb3VudHMgZnJvbSBzaWduZXJcIik7XG4gICAgICB9XG5cbiAgICAgIG9uQ29ubmVjdCh7IFxuICAgICAgICBjbGllbnQsIFxuICAgICAgICBhZGRyZXNzOiBhY2NvdW50c1swXS5hZGRyZXNzLFxuICAgICAgICBzaWduZXI6IG9mZmxpbmVTaWduZXIgXG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgdG9hc3Qoe1xuICAgICAgICB0aXRsZTogXCJDb25uZWN0ZWQhXCIsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBgQ29ubmVjdGVkIHRvICR7YWNjb3VudHNbMF0uYWRkcmVzcy5zbGljZSgwLCA4KX0uLi4ke2FjY291bnRzWzBdLmFkZHJlc3Muc2xpY2UoLTgpfWAsXG4gICAgICAgIHN0YXR1czogXCJzdWNjZXNzXCIsXG4gICAgICAgIGR1cmF0aW9uOiA1MDAwLFxuICAgICAgICBpc0Nsb3NhYmxlOiB0cnVlLFxuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJDb25uZWN0aW9uIGVycm9yOlwiLCBlcnJvcik7XG4gICAgICB0b2FzdCh7XG4gICAgICAgIHRpdGxlOiBcIkNvbm5lY3Rpb24gRmFpbGVkXCIsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBlcnJvci5tZXNzYWdlLFxuICAgICAgICBzdGF0dXM6IFwiZXJyb3JcIixcbiAgICAgICAgZHVyYXRpb246IDUwMDAsXG4gICAgICAgIGlzQ2xvc2FibGU6IHRydWUsXG4gICAgICB9KTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgc2V0SXNDb25uZWN0aW5nKGZhbHNlKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8QnV0dG9uXG4gICAgICBjb2xvclNjaGVtZT1cInRlYWxcIlxuICAgICAgb25DbGljaz17Y29ubmVjdEtlcGxyfVxuICAgICAgaXNMb2FkaW5nPXtpc0Nvbm5lY3Rpbmd9XG4gICAgICBsb2FkaW5nVGV4dD1cIkNvbm5lY3RpbmcuLi5cIlxuICAgID5cbiAgICAgIENvbm5lY3QgV2FsbGV0XG4gICAgPC9CdXR0b24+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBXYWxsZXRDb25uZWN0OyAiXSwibmFtZXMiOlsidXNlU3RhdGUiLCJCdXR0b24iLCJUZXh0IiwidXNlVG9hc3QiLCJTaWduaW5nQ29zbVdhc21DbGllbnQiLCJjb25maWciLCJXYWxsZXRDb25uZWN0Iiwib25Db25uZWN0IiwiaXNDb25uZWN0aW5nIiwic2V0SXNDb25uZWN0aW5nIiwidG9hc3QiLCJjb25uZWN0S2VwbHIiLCJ3aW5kb3ciLCJrZXBsciIsIkVycm9yIiwiZW5hYmxlIiwiQ0hBSU5fQ09ORklHIiwiY2hhaW5JZCIsIm9mZmxpbmVTaWduZXIiLCJnZXRPZmZsaW5lU2lnbmVyQXV0byIsImFjY291bnRzIiwiZ2V0QWNjb3VudHMiLCJsZW5ndGgiLCJjbGllbnQiLCJjb25uZWN0V2l0aFNpZ25lciIsInJwY0VuZHBvaW50IiwiZ2FzUHJpY2UiLCJzaWduZXJBY2NvdW50cyIsImFkZHJlc3MiLCJzaWduZXIiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwic2xpY2UiLCJzdGF0dXMiLCJkdXJhdGlvbiIsImlzQ2xvc2FibGUiLCJlcnJvciIsImNvbnNvbGUiLCJtZXNzYWdlIiwiY29sb3JTY2hlbWUiLCJvbkNsaWNrIiwiaXNMb2FkaW5nIiwibG9hZGluZ1RleHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/WalletConnect.js\n"));

/***/ })

});